# Log verbosity level. Possible values are:
# 'fatal', 'error', 'warn', 'info', 'debug', 'trace'
# Optional, default is 'info'.
LOG_LEVEL=info

# Refresh interval in seconds.
# Optional. If unset, it'll be one-shot run.
REFRESH_INTERVAL=60

# TTL for DNS records in seconds.
# Optional, default is 300.
RECORD_TTL=300

# Absolute path to the output directory.
# Required.
OUT_DIR=/srv/dns/zonefiles

# Healthchecks.io compatible webhook URL.
# Optional.
HEALTHCHECKS_URL=https://hc-ping.com/00000000-0000-0000-0000-000000000000

####
## OPNsense provider settings.
####

# URL to the OPNsense API endpoint.
# Required.
OPNSENSE_URL=https://opnsense.local:8443/api

# Credentials for the OPNsense API.
# Required.
OPNSENSE_API_KEY=redacted
OPNSENSE_API_SECRET=redacted

# Disable SSL certificate verification.
# IMPORTANT: This option wouldn't work within .env file, you need to set it within the shell environment.
# IMPORTANT: Avoid using this option whenever possible. Prefer to use NODE_EXTRA_CA_CERTS.
#
# Possible values are: 
#  - "0" to ACCEPT untrusted certificates.
#  - "1" to REJECT untrusted certificates.
# Optional. Default is to REJECT.
#NODE_TLS_REJECT_UNAUTHORIZED=1

# Path to an additional CA certificate file.
# IMPORTANT: This option wouldn't work within .env file, you need to set it within the shell environment.
#
# Optional. Default is unset.
#NODE_EXTRA_CA_CERTS=/path/to/ca.crt

####
## Zones settings.
####

# Each zone is a separate environment variable starting with "ZONE_?" prefix,
# where "?" is a unique identifier. It could be a number or a human-readable name.
#
# Each zone has four required settings: interface name, domain name, domain SOA, and domain NS.
# The interface name is used to identify the zone in the firewall rules.
# The domain name is used to generate the DNS records.

# Name of the firewall interface. Those things you see in sidebar while in DHCPv4 Service.
# Required.
ZONE_INT_IFACE=internal

# Whether to include only static mappings.
# Optional. Default: false
ZONE_STATIC_STATIC_ONLY=false

# Zone type.
# Possible values are:
# - "default" for a zone with A records.
# - "rdns" for a reverse DNS zone with PTR records.
# Optional. Default is 'default'.
ZONE_INT_TYPE=default

# Comma-separated list of keys to create records for.
# Possible values are:
# - "hostname" – use hostnames as record names.
# - "mac" – use MAC addresses as record names.
# Optional. Default is 'hostname,mac'.
ZONE_INT_INCLUDE=hostname,mac

# Domain name for the zone.
# - For "default" zones it'll be a records' zone (i.e., "[name].int.example.network. => 10.0.0.1").
# - For "rdns" zones it'll be a value suffix (i.e., "1.0.0.10.in-addr.arpa => [name].int.example.network").
# Required.
ZONE_INT_DOMAIN=int.example.network.

# Primary nameserver for the zone.
# Required.
ZONE_INT_SOA_PRIMARY=ns1.example.network.

# Responsible person for the zone.
# Required.
ZONE_INT_SOA_RESPONSIBLE=hostmaster.example.network.

# Comma-separated list of nameservers for the zone.
# Required.
ZONE_INT_NS=ns1.example.network.,ns2.example.network.

###
## Example of a second reverse DNS zone configuration
###

# Address prefix for reverse DNS zone.
# Examples: "10.0.", "192.168.1.", "172.16.41.", "127."
# Required.
ZONE_RDNS_PREFIX=10.0.

ZONE_RDNS_DOMAIN=int.example.network
ZONE_RDNS_IFACE=internal
ZONE_RDNS_STATIC_ONLY=false
ZONE_RDNS_TYPE=rdns
ZONE_RDNS_SOA_PRIMARY=ns1.example.network.
ZONE_RDNS_SOA_RESPONSIBLE=hostmaster.example.network.
ZONE_RDNS_NS=ns1.example.network.,ns2.example.network.
